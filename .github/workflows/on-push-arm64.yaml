#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['**']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain,
# and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: smartgridready/sgr-intermediary

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image-arm64:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven cache
        uses: skjolber/maven-cache-github-action@v3.1.1
        with:
          step: restore

      - name: Run the Maven install phase
        run: mvn --batch-mode --update-snapshots install

      - name: Save Maven cache
        uses: skjolber/maven-cache-github-action@v3.1.1
        with:
          step: save

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: build
        run: docker buildx build --platform linux/arm64 --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master-arm64 .

      - name: Push Docker image
        id: push
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master-arm64
